@using Components.Client.Pages.Componentes
@using Components.Client.Model
<div class="container">
    <div class="jumbotron">
        <EditForm Model="Movie" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="form-group">
                <label class="form-label">
                    Película
                </label>
                <div class="mb-3">
                    <InputText class="form-control" @bind-Value="@Movie.Title" placeholder="Título"></InputText>
                    <ValidationMessage For="@(()=>Movie.Title)"></ValidationMessage>
                </div>
                <div class="col col-sm-3">
                    <InputCheckbox id="en_cartelera" class="form-check-input" @bind-Value="@Movie.InTheaters">
                    </InputCheckbox>
                    <label class="form-check-label" for="en_cartelera">En cartelera</label>
                    <ValidationMessage For="@(()=>Movie.InTheaters)"></ValidationMessage>
                    </div>
                <div class="mb-3">
                    <InputText class="form-control" @bind-Value="@Movie.Description" placeholder="Descripción"></InputText>
                    <ValidationMessage For="@(()=>Movie.Description)"></ValidationMessage>
                </div>
                <div class="mb-3">
                    <label class="form-label">
                        Fecha de estreno
                    </label>
                    <InputDate class="form-control" @bind-Value="@Movie.ReleaseDate"></InputDate>
                    <ValidationMessage For="@(()=>Movie.ReleaseDate)"></ValidationMessage>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col">
                            <label>Selecciona las categorías</label>
                            <div>
                                <SelectorMultiple Seleccionados="Seleccionados" NoSeleccionados="NoSeleccionados">
                                </SelectorMultiple>
                            </div>
                        </div>
                        <div class="col">
                            @* Poster => Imagen de la pelicula *@
                            <div class="form-group">
                                <ImageComponent Label="" ImageSelected="ImageSelected" ImageURL=""></ImageComponent>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <button type="submit" class="btn btn-success">Aceptar</button>
                <button type="submit" class="btn btn-danger">Cancelar</button>
            </div>
        </EditForm>

    </div>
</div>

@code {
    [Parameter] public Movie Movie { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public List<Category> CategoriasSeleccionadas { get; set; } = new List<Category>();
    [Parameter] public List<Category> CategoriasNoSeleccionadas { get; set; } = new List<Category>();

    private string posterTemporal;
    private List<SelectorMultipleModel> NoSeleccionados { get; set; } = new List<SelectorMultipleModel>();

    private List<SelectorMultipleModel> Seleccionados { get; set; } = new List<SelectorMultipleModel>();

    private void ImageSelected(string imageB64)
    {
        Movie.MovieImage = imageB64;
    }

    protected override void OnInitialized()
    {
        Seleccionados = CategoriasSeleccionadas.Select(x => new SelectorMultipleModel(x.Id.ToString(), x.Name)).ToList();
        NoSeleccionados = CategoriasNoSeleccionadas.Select(x => new SelectorMultipleModel(x.Id.ToString(), x.Name)).ToList();
        if (!string.IsNullOrWhiteSpace(Movie.MovieImage))
        {
            posterTemporal = Movie.MovieImage;
            Movie.MovieImage = null;
        }
    }
}